#!/usr/bin/env python3

import argparse
import re
import subprocess


def parse():
    parser = argparse.ArgumentParser()
    parser.add_argument("extra", nargs="?", help="extra filters")
    parser.add_argument(
        "-p", "--priority", action="store_true", help="sort by priority"
    )
    parser.add_argument("-g", "--grep", help="mattern to test lines")
    return parser.parse_args()


def run(extra, priority=True, pattern=None):
    p = "-p" if priority else ""
    subtasks = "--namespace" if priority else "--indent"
    filters = "#Work"
    if extra is not None:
        filters += f"& {extra}"
    user_grep = re.compile(b"." if pattern is None else pattern.encode("utf-8"))

    def grep(line):
        is_future = b"/Future projects" not in line
        user_match = re.findall(user_grep, line)
        return is_future and len(user_match) > 0

    # call CLI and page
    todo = subprocess.Popen(
        f"unbuffer todoist {subtasks} list {p} --filter".split() + [filters],
        stdout=subprocess.PIPE,
    )
    subprocess.run("less -r".split(), input=b"".join(filter(grep, todo.stdout)))


if __name__ == "__main__":
    args = parse()
    run(args.extra, priority=args.priority, pattern=args.grep)
